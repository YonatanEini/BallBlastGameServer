@startuml

title __SRC's Class Diagram__\n

    class Ball {
        + HP : int
        + Rgb : int[]
        + color : int
        + dir_x : int
        + dir_y : int
        + level : int
        + width : int
        + x : int
        + y : int
        + Ball()
        + Ball()
        + CheckCollesion()
        + HandleGroundHit()
        + Make_start_movement()
        + SplitBall()
        + distance()
        + run()
    }

  

    class BallDto {
        + CurrentPosition : Point
        + Hp : int
        + RgbColors : int[]
        + Width : int
        + BallDto()
        + BallDto()
    }

  


  

    class DataDto {
        + IsGameOver : boolean
        + IsPaused : boolean
        + NewGameRequest : boolean
        + cannonPos : Point
        + fire_listXY : List<Point>
        + score : int
        {static} - serialVersionUID : long
        + DataDto()
        + DataDto()
    }

  

    class RecceiveDataDto {
        + IsGameOver : boolean
        + IsPaused : boolean
        + NewGameRequest : boolean
        + cannonPos : Point
        + current_ballList : List<BallDto>
        + fire_listXY : List<Point>
        + score : int
        {static} - serialVersionUID : long
        + RecceiveDataDto()
        + RecceiveDataDto()
        + RecceiveDataDto()
    }

  

    class program {
        {static} + IsGameOver : boolean
        {static} + IsOnPause : boolean
        {static} + ballList : List<Ball>
        {static} + firstClientData : DataDto
        {static} + firstClientFireList : List<Point>
        {static} + gson : Gson
        {static} + secondClientData : DataDto
        {static} + ActivateBallListOnConnection()
        {static} + ConvertToDtoList()
        {static} + HandleCollestions()
        {static} + InitializeConnection()
        {static} + Random_easy_HP()
        {static} + ReadClientOneData()
        {static} + ReadSecondData()
        {static} + SendClientOneData()
        {static} + SendSecondClientData()
        {static} + main()
        {static} + make_random_number()
    }

  

    class program.AnnoyingBeep {
        ~ timer : Timer
        ~ toolkit : Toolkit
        + AnnoyingBeep()
    }



    class program.AnnoyingBeep.RemindTask {
        ~ counter : int
        + run()
    }



  DataDto .up.|> java.io.Serializable
  RecceiveDataDto .up.|> java.io.Serializable
  program +-down- program.AnnoyingBeep
  program.AnnoyingBeep +-down- program.AnnoyingBeep.RemindTask
  program.AnnoyingBeep.RemindTask -up-|> java.util.TimerTask


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
